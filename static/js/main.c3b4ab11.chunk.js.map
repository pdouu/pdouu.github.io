{"version":3,"sources":["components/siderbar-button/SidebarButton.jsx","components/sidebar-header/SidebarHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["SidebarButton","pagePath","pageName","selectedButton","to","className","toLowerCase","SidebarHeader","buttonSelected","withRouter","history","useState","selectedPage","setSelectedPage","useEffect","location","pathname","replace","process","slice","document","querySelector","setAttribute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","console","log"],"mappings":"sSAmBeA,G,MAdO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eAC3C,OACE,eAAC,IAAD,CACEC,GAAIH,EACJI,UAAS,yBAAoBH,EAASI,cAA7B,YACPJ,EAASI,gBAAkBH,EAAiB,WAAa,IAH7D,UAME,sBAAME,UAAS,sBAAiBH,EAASI,iBACxCJ,OCmBQK,G,MA9BO,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,eACjBK,EAAiBL,GAAkC,QAEzD,OACE,sBAAKE,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBACf,oBAAIA,UAAS,qBAAgBF,KAC7B,sBAAKE,UAAU,4BAAf,UACE,cAAC,EAAD,CACEH,SAAS,QACTD,SAAS,IACTE,eAAgBK,IAElB,cAAC,EAAD,CACEN,SAAS,WACTD,SAAS,YACTE,eAAgBK,IAElB,cAAC,EAAD,CACEN,SAAS,UACTD,SAAS,WACTE,eAAgBK,OAGpB,oBAAIH,UAAS,qBAAgBF,KAC7B,qBAAKE,UAAU,0BCINI,eA1BH,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACaC,mBAAS,IADtB,mBACpBC,EADoB,KACNC,EADM,KAgB3B,OAbAC,qBAAU,WAERD,EACEH,EAAQK,SAASC,SAASC,QAAQC,GAAwB,IAAIC,MAAM,IAG9CC,SAASC,cAAc,QAC/BC,aACd,QADF,qBAEgBV,GAA8B,aAK9C,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,CAAeF,eAAgBS,IAC/B,qBAAKP,UAAU,0BAAf,SACE,cAAC,IAAD,YCdOkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJd,SAASe,eAAe,SAM1BZ,EAAgBa,QAAQC,O","file":"static/js/main.c3b4ab11.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./SidebarButton.style.scss\";\r\n\r\nconst SidebarButton = ({ pagePath, pageName, selectedButton }) => {\r\n  return (\r\n    <Link\r\n      to={pagePath}\r\n      className={`sidebar-button ${pageName.toLowerCase()} ${\r\n        pageName.toLowerCase() === selectedButton ? \"selected\" : \"\"\r\n      }`}\r\n    >\r\n      <span className={`button-icon ${pageName.toLowerCase()}`}></span>\r\n      {pageName}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default SidebarButton;\r\n","import React from \"react\";\r\nimport SidebarButton from \"../siderbar-button/SidebarButton\";\r\nimport \"./SidebarHeader.style.scss\";\r\nconst SidebarHeader = ({ selectedButton }) => {\r\n  const buttonSelected = selectedButton ? selectedButton : \"about\";\r\n\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <div className=\"sidebar-image\" />\r\n      <hr className={`sidebar-hr ${selectedButton}`} />\r\n      <div className=\"sidebar-buttons-container\">\r\n        <SidebarButton\r\n          pageName=\"About\"\r\n          pagePath=\"/\"\r\n          selectedButton={buttonSelected}\r\n        />\r\n        <SidebarButton\r\n          pageName=\"Projects\"\r\n          pagePath=\"/projects\"\r\n          selectedButton={buttonSelected}\r\n        />\r\n        <SidebarButton\r\n          pageName=\"Contact\"\r\n          pagePath=\"/contact\"\r\n          selectedButton={buttonSelected}\r\n        />\r\n      </div>\r\n      <hr className={`sidebar-hr ${selectedButton}`} />\r\n      <div className=\"sidebar-language\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarHeader;\r\n","import { useEffect, useState } from \"react\";\nimport { Switch, useHistory, withRouter } from \"react-router-dom\";\n\nimport \"./App.scss\";\nimport SidebarHeader from \"./components/sidebar-header/SidebarHeader\";\n\nconst App = ({ history }) => {\n  const [selectedPage, setSelectedPage] = useState(\"\");\n\n  useEffect(() => {\n    //setting a selected page for background and selected buttons\n    setSelectedPage(\n      history.location.pathname.replace(process.env.PUBLIC_URL, \"\").slice(1)\n    );\n    //changing background color according to selected page\n    const indexBackground = document.querySelector(\"html\");\n    indexBackground.setAttribute(\n      \"class\",\n      `background-${selectedPage ? selectedPage : \"about\"}`\n    );\n  });\n\n  return (\n    <div className=\"App\">\n      <SidebarHeader selectedButton={selectedPage}></SidebarHeader>\n      <div className=\"route-content-container\">\n        <Switch></Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}