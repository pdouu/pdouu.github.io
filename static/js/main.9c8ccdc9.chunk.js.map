{"version":3,"sources":["components/siderbar-button/SidebarButton.jsx","components/sidebar-header/SidebarHeader.jsx","utils/about-page-text.js","pages/about-page/About.jsx","utils/projects-list.js","assets/project-images/cizim-oyunu1.png","assets/project-images/nodemcu.png","assets/project-images/freecodecamp-gif.gif","assets/project-images/ecommerce.png","pages/projects-page/project-item/ProjectItem.jsx","pages/projects-page/Projects.jsx","firebase/firebase-utils.js","pages/contact-page/Contact.jsx","App.js","reportWebVitals.js","index.js"],"names":["SidebarButton","pagePath","pageName","selectedButton","to","className","toLowerCase","SidebarHeader","process","aboutPageText","hello_message","my_name_message","description_message","projects_intro_message","projects_outro_message","About","projectList","title","image","links","github","web","text","tags","ProjectItem","target","rel","href","map","tag","index","style","backgroundImage","Projects","projectsList","project","indexSent","Math","round","random","createNewContactMessage","contactObj","a","contactRef","firestore","collection","doc","get","exists","name","email","messageSent","sentAt","Date","set","console","log","message","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Contact","useState","userMessage","setUserMessage","handleFormChange","event","value","handleFormSubmit","preventDefault","alert","onSubmit","type","placeholder","onChange","required","maxLength","withRouter","history","selectedPage","setSelectedPage","useEffect","location","pathname","replace","slice","document","querySelector","setAttribute","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c8ccdc9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./SidebarButton.style.scss\";\r\n\r\nconst SidebarButton = ({ pagePath, pageName, selectedButton }) => {\r\n  return (\r\n    <Link\r\n      to={pagePath}\r\n      className={`sidebar-button ${pageName.toLowerCase()} ${\r\n        pageName.toLowerCase() === selectedButton ? \"selected\" : \"\"\r\n      }`}\r\n    >\r\n      <span className={`button-icon ${pageName.toLowerCase()}`}></span>\r\n      {pageName}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default SidebarButton;\r\n","import React from \"react\";\r\nimport SidebarButton from \"../siderbar-button/SidebarButton\";\r\nimport \"./SidebarHeader.style.scss\";\r\nconst SidebarHeader = ({ selectedButton }) => {\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <div className=\"sidebar-buttons-container\">\r\n        <SidebarButton\r\n          pageName=\"About\"\r\n          pagePath={`${process.env.PUBLIC_URL}/`}\r\n          selectedButton={selectedButton}\r\n        />\r\n        <SidebarButton\r\n          pageName=\"Projects\"\r\n          pagePath={`${process.env.PUBLIC_URL}/projects`}\r\n          selectedButton={selectedButton}\r\n        />\r\n        <SidebarButton\r\n          pageName=\"Contact\"\r\n          pagePath={`${process.env.PUBLIC_URL}/contact`}\r\n          selectedButton={selectedButton}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"sidebar-language\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarHeader;\r\n","const aboutPageText = {\r\n  hello_message: \"Hi!\",\r\n  my_name_message: \"My name is Yusuf Cemal.\",\r\n  description_message: \"I am a Front End Developer/Student living in Turkey.\",\r\n  projects_intro_message: \"I've used (or im using):\",\r\n  projects_outro_message: \"in my projects...\",\r\n};\r\n\r\nexport default aboutPageText;\r\n","import React from \"react\";\r\n\r\nimport \"./About.style.scss\";\r\nimport aboutPageText from \"../../utils/about-page-text\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"about-page-container\">\r\n      <h1>{aboutPageText.hello_message}</h1>\r\n      <div className=\"description-p about-name\">My name is Yusuf Cemal.</div>\r\n      <div className=\"description-p\">\r\n        I am a <span className=\"about-job\">web developer / student</span> living\r\n        in Turkey. I'm deeply interested in{\" \"}\r\n        <span className=\"about-job\">front end web development </span> and\r\n        developing apps using:\r\n        <div className=\"tools-image\" />\r\n        You can check some of my projects{\" \"}\r\n        <Link\r\n          to={`${process.env.PUBLIC_URL}/projects`}\r\n          className=\"projects-link\"\r\n        >\r\n          here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import cizimOyunuImg from \"../assets/project-images/cizim-oyunu1.png\";\r\nimport nodemcuImg from \"../assets/project-images/nodemcu.png\";\r\nimport freecodecampImg from \"../assets/project-images/freecodecamp-gif.gif\";\r\nimport ecommerceImg from \"../assets/project-images/ecommerce.png\";\r\nconst projectList = [\r\n  {\r\n    title: \"Guess The Drawing / Online Pictionary Clone\",\r\n    image: cizimOyunuImg,\r\n    links: {\r\n      github: \"https://github.com/yusufcmlt/cizim-oyunu\",\r\n      web: \"http://cizimoyunu.github.io\",\r\n    },\r\n    text:\r\n      \"A web based multiplayer drawing game with React, Socket.io and p5.js.\",\r\n    tags: [\"React\", \"SocketIO\", \"Firebase\", \"Hooks\", \"p5.js\"],\r\n  },\r\n  {\r\n    title: \"NodeMCU Smart Home System Interface\",\r\n    image: nodemcuImg,\r\n    links: {\r\n      github: \"https://github.com/yusufcmlt/nodemcu-home-project\",\r\n      web: \"https://yusufcmlt.github.io/nodemcu-home-project/\",\r\n    },\r\n    text:\r\n      \"A smart home prototype with NodeMCU microcontroller, react and firebase as user interface.\",\r\n    tags: [\"NodeMCU\", \"Firebase\", \"React\", \"Hooks\"],\r\n  },\r\n  {\r\n    title: \"FreeCodeCamp Front End Projects\",\r\n    image: freecodecampImg,\r\n    links: {\r\n      github: \"https://github.com/yusufcmlt/freecodecamp-projects\",\r\n      web: \"https://github.com/yusufcmlt/freecodecamp-projects\",\r\n    },\r\n    text:\r\n      \"Projects that i've done as a part of FreeCodeCamp front-end developer curriculum. Pomodoro clock, calculator, drum machine, markdown editor and random quote apps.\",\r\n    tags: [\"React\", \"FreeCodeCamp\", \"Hooks\"],\r\n  },\r\n  {\r\n    title: \"React E-commerce App / WearSomtn\",\r\n    image: ecommerceImg,\r\n    links: {\r\n      github: \"https://github.com/yusufcmlt/react-ecommerce\",\r\n      web: \"https://yusufcmlt.github.io/react-ecommerce/\",\r\n    },\r\n    text:\r\n      \"E-commerce app with React and Redux. Firebase as database. I've started this project as part of a udemy course but then implemented responsive design, admin dashboard, item searching and individual item pages.\",\r\n    tags: [\"React\", \"Redux\", \"Firebase\", \"Hooks\"],\r\n  },\r\n];\r\n\r\nexport default projectList;\r\n","export default __webpack_public_path__ + \"static/media/cizim-oyunu1.695c58d3.png\";","export default __webpack_public_path__ + \"static/media/nodemcu.deda9cda.png\";","export default __webpack_public_path__ + \"static/media/freecodecamp-gif.71c37278.gif\";","export default __webpack_public_path__ + \"static/media/ecommerce.205c9579.png\";","import React from \"react\";\r\nimport \"./ProjectItem.style.scss\";\r\nconst ProjectItem = ({ title, image, text, links, tags }) => {\r\n  return (\r\n    <div className=\"project-item-container\">\r\n      <div className=\"project-info\">\r\n        <div className=\"project-head\">\r\n          <h3 className=\"project-title\">{title}</h3>\r\n          <div className=\"project-links-container\">\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              className=\"project-link github\"\r\n              href={links.github}\r\n            >\r\n              Github\r\n            </a>\r\n            <a\r\n              className=\"project-link web\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              href={links.web}\r\n            >\r\n              Web\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <p className=\"project-text\">{text}</p>\r\n        <div className=\"project-tags\">\r\n          {tags.map((tag, index) => (\r\n            <span key={index + \"a\"} className=\"tag\">\r\n              {tag}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"project-image\"\r\n        style={{ backgroundImage: `url(${image})` }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectItem;\r\n","import React from \"react\";\r\nimport \"./Projects.style.scss\";\r\nimport projectsList from \"../../utils/projects-list\";\r\nimport ProjectItem from \"./project-item/ProjectItem\";\r\n\r\nconst Projects = () => {\r\n  const randomKey = (indexSent) => {\r\n    return Math.round(Math.random() * 10000) + indexSent;\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects-page-container\">\r\n      <h1>Some of My Work</h1>\r\n      <p>\r\n        Some work i did while i was{\" \"}\r\n        <small className=\"small-text\">mostly learning.</small>.\r\n      </p>\r\n      <div className=\"projects-container\">\r\n        {projectsList.map((project, index) => (\r\n          <ProjectItem\r\n            key={randomKey(index)}\r\n            title={project.title}\r\n            image={project.image}\r\n            text={project.text}\r\n            links={project.links}\r\n            tags={project.tags}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBev9S7hzYO2KnaZJLNPWLwND5yC00qXRo\",\r\n  authDomain: \"portofolio-db.firebaseapp.com\",\r\n  databaseURL: \"https://portofolio-db.firebaseio.com\",\r\n  projectId: \"portofolio-db\",\r\n  storageBucket: \"portofolio-db.appspot.com\",\r\n  messagingSenderId: \"738947011764\",\r\n  appId: \"1:738947011764:web:ee6e8491482a32df0873e1\",\r\n  measurementId: \"G-Q1YVQ4VG9P\",\r\n};\r\n\r\nexport const createNewContactMessage = async (contactObj) => {\r\n  //New or existing messages reference\r\n  const contactRef = firestore.collection(\"contactMessages\").doc();\r\n\r\n  //Getting message snapshot.\r\n  const snapShot = await contactRef.get();\r\n\r\n  //Creating a new message object on database\r\n  if (!snapShot.exists) {\r\n    const { name, email, messageSent } = contactObj;\r\n    const sentAt = new Date();\r\n\r\n    //Saving message\r\n    try {\r\n      await contactRef.set({ name, email, sentAt, messageSent });\r\n    } catch (error) {\r\n      console.log(\"error sending message\", error.message);\r\n    }\r\n  }\r\n  return contactRef;\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firestore = firebase.firestore();\r\nexport default firebase;\r\n","import React, { useState } from \"react\";\r\nimport { createNewContactMessage } from \"../../firebase/firebase-utils\";\r\n\r\nimport \"./Contact.style.scss\";\r\n\r\nconst Contact = () => {\r\n  const [userMessage, setUserMessage] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    messageSent: \"\",\r\n  });\r\n\r\n  const handleFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserMessage({ ...userMessage, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await createNewContactMessage(userMessage);\r\n      setUserMessage({\r\n        name: \"\",\r\n        email: \"\",\r\n        messageSent: \"\",\r\n      });\r\n      alert(\"Message Sent!\");\r\n    } catch (error) {\r\n      alert(\"There is an error sending your message.\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const { name, email, messageSent } = userMessage;\r\n  return (\r\n    <div className=\"contact-page-container\">\r\n      <h2>Let's Get in Touch!</h2>\r\n      <div className=\"contact-form-container\">\r\n        <div className=\"contact-form-sidebar\">\r\n          <h3>Contact</h3>\r\n          <p>\r\n            You can reach me using the links below or simply filling the contact\r\n            form!\r\n          </p>\r\n          <div className=\"contact-links-container\">\r\n            <a\r\n              href=\"https://github.com/yusufcmlt\"\r\n              className=\"contact-link github\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              {\"\"}\r\n            </a>\r\n            <a\r\n              href=\"https://www.linkedin.com/in/yusufcemalt/\"\r\n              className=\"contact-link linkedin\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              {\"\"}\r\n            </a>\r\n            <a\r\n              href=\"mailto:yusufcemalt@gmail.com\"\r\n              className=\"contact-link email\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              {\"\"}\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"contact-form-content\">\r\n          <form className=\"contact-form\" onSubmit={handleFormSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              className=\"email-name\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleFormChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              className=\"email-name\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleFormChange}\r\n              required\r\n            />\r\n            <textarea\r\n              placeholder=\"Your Message\"\r\n              className=\"text\"\r\n              maxLength=\"500\"\r\n              name=\"messageSent\"\r\n              value={messageSent}\r\n              onChange={handleFormChange}\r\n              required\r\n            />\r\n            <button type=\"submit\" className=\"contact-submit-button\">\r\n              Send\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Switch, withRouter, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport \"./App.scss\";\r\nimport SidebarHeader from \"./components/sidebar-header/SidebarHeader\";\r\nimport About from \"./pages/about-page/About\";\r\nimport Projects from \"./pages/projects-page/Projects\";\r\nimport Contact from \"./pages/contact-page/Contact\";\r\n\r\nconst App = ({ history }) => {\r\n  const [selectedPage, setSelectedPage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //setting a selected page for background and selected buttons\r\n    const pagePath = history.location.pathname\r\n      .replace(process.env.PUBLIC_URL, \"\")\r\n      .slice(1);\r\n    setSelectedPage(pagePath);\r\n    //changing background color according to selected page\r\n    const indexBackground = document.querySelector(\"html\");\r\n    indexBackground.setAttribute(\r\n      \"class\",\r\n      `background-${selectedPage ? selectedPage : \"about\"}`\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <SidebarHeader\r\n        selectedButton={selectedPage ? selectedPage : \"about\"}\r\n      ></SidebarHeader>\r\n      <div className=\"route-content-container\">\r\n        <Switch>\r\n          <Route exact path={`${process.env.PUBLIC_URL}/`} component={About} />\r\n          <Route\r\n            path={`${process.env.PUBLIC_URL}/projects`}\r\n            component={Projects}\r\n          />\r\n          <Route\r\n            path={`${process.env.PUBLIC_URL}/contact`}\r\n            component={Contact}\r\n          />\r\n          <Route\r\n            render={() => (\r\n              <Redirect to={`${process.env.PUBLIC_URL}/projects`} />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}